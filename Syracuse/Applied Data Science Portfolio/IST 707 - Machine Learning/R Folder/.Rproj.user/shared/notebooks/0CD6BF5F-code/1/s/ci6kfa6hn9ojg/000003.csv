"0",""
"0","# Set seed for fixed random seed"
"0","set.seed(73)"
"0",""
"0","# Creating the number of clusters"
"0","cluster_loop <- c(2:20)"
"0",""
"0","# Creating data frame to store cluster stats"
"0","Best_Cluster <- data.frame()"
"0",""
"0","x <-  2"
"0","# Looping through the cluster number loop to find the best number of clusters"
"0","for (x in cluster_loop){"
"0","  "
"0","  # Run kmeans function with each cluster number"
"0","  Netflix_Norm_DF_Freq <- Netflix_Norm_DF / length(colSums(as.matrix(Netflix_DTM)))"
"0","  Clusters <- kmeans(Netflix_Norm_DF_Freq, x)"
"0","  "
"0","  # Set the Cluster as a variable in the data frame"
"0","  Netflix_Norm_DF_Freq$Clusters <- as.factor(Clusters$cluster)"
"0","  "
"0","  Cohesion_Clus <- Clusters$tot.withinss"
"0","  Separation_Clus <- Clusters$betweenss"
"0",""
"0","  "
"0","  data_frame <- data.frame(""Number"" = x, ""Cohesion"" = Cohesion_Clus, ""Separation"" = Separation_Clus)"
"0","  Best_Cluster <- rbind(Best_Cluster, data_frame)"
"0",""
"0","  # Convert all columns to numeric in order to plot using pcom"
"0","  Netflix_Norm_DF_Freq <- sapply(Netflix_Norm_DF_Freq, as.numeric)"
"0","  "
"0","  # Plot results"
"0","  plot_title <- paste0(""Cluster "",x)  "
"0","  pcom <- prcomp(Netflix_Norm_DF_Freq, scale. = TRUE)"
"0","  autoplot(pcom, data = Netflix_Norm_DF_Freq, colour = 'Clusters', frame = TRUE, frame.type = 'norm') +"
"0","    ggtitle(plot_title)"
"0",""
"0","  # Plot results"
"0","  #clusplot(Netflix_Norm_DF_Freq, Netflix_Norm_DF_Freq$Clusters, color=T, shade=T, labels=4, lines=T)"
"0","  "
"0","  # print(paste0(""Completed Cluster: "", x))"
"0","}"
"0",""
